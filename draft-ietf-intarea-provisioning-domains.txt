



intarea                                                       P. Pfister
Internet-Draft                                            E. Vyncke, Ed.
Intended status: Standards Track                                   Cisco
Expires: May 3, 2018                                            T. Pauly
                                                             D. Schinazi
                                                                   Apple
                                                                M. Keane
                                                               Microsoft
                                                        October 30, 2017


             Discovering Provisioning Domain Names and Data
               draft-ietf-intarea-provisioning-domains-00

Abstract

   An increasing number of hosts and networks are connected to the
   Internet through multiple interfaces, some of which may provide
   multiple ways to access the internet by means of multiple IPv6 prefix
   configurations.

   This document describes a way for hosts to retrieve additional
   information about their network access characteristics.  The set of
   configuration items required to access the Internet is called a
   Provisioning Domain (PvD).  The PvD is identified by a Fully
   Qualified Domain Name (FQDN).  This identifier, retrieved using a new
   Router Advertisement (RA) option, is associated with the set of
   information included within the RA and may later be used to retrieve
   additional information associated with the PvD by way of an HTTP-
   over-TLS request.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on May 3, 2018.




Pfister, et al.            Expires May 3, 2018                  [Page 1]

Internet-Draft            Provisioning Domains              October 2017


Copyright Notice

   Copyright (c) 2017 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (https://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   3
   2.  Terminology . . . . . . . . . . . . . . . . . . . . . . . . .   3
   3.  Provisioning Domain Identification using Router
       Advertisements  . . . . . . . . . . . . . . . . . . . . . . .   4
     3.1.  PvD ID Option for Router Advertisements . . . . . . . . .   4
     3.2.  Router Behavior . . . . . . . . . . . . . . . . . . . . .   5
     3.3.  Host Behavior . . . . . . . . . . . . . . . . . . . . . .   5
       3.3.1.  DHCPv6 configuration association  . . . . . . . . . .   6
       3.3.2.  DHCPv4 configuration association  . . . . . . . . . .   7
       3.3.3.  Interconnection Sharing by the Host . . . . . . . . .   7
   4.  Provisioning Domain Additional Information  . . . . . . . . .   7
     4.1.  Retrieving the PvD Additional Information . . . . . . . .   7
     4.2.  Providing the PvD Additional Information  . . . . . . . .   9
     4.3.  PvD Additional Information Format . . . . . . . . . . . .   9
       4.3.1.  Connectivity Characteristics Information  . . . . . .  10
       4.3.2.  Private Extensions  . . . . . . . . . . . . . . . . .  11
       4.3.3.  Example . . . . . . . . . . . . . . . . . . . . . . .  11
     4.4.  Detecting misconfiguration and misuse . . . . . . . . . .  12
   5.  Security Considerations . . . . . . . . . . . . . . . . . . .  12
   6.  Privacy Considerations  . . . . . . . . . . . . . . . . . . .  12
   7.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .  13
   8.  Acknowledgements  . . . . . . . . . . . . . . . . . . . . . .  13
   9.  Contributor . . . . . . . . . . . . . . . . . . . . . . . . .  14
   10. References  . . . . . . . . . . . . . . . . . . . . . . . . .  14
     10.1.  Normative references . . . . . . . . . . . . . . . . . .  14
     10.2.  Informative references . . . . . . . . . . . . . . . . .  15
   Appendix A.  Changelog  . . . . . . . . . . . . . . . . . . . . .  16
     A.1.  Version 00  . . . . . . . . . . . . . . . . . . . . . . .  16
     A.2.  Version 01  . . . . . . . . . . . . . . . . . . . . . . .  16
     A.3.  Version 02  . . . . . . . . . . . . . . . . . . . . . . .  17
     A.4.  WG Document version 00  . . . . . . . . . . . . . . . . .  18



Pfister, et al.            Expires May 3, 2018                  [Page 2]

Internet-Draft            Provisioning Domains              October 2017


   Appendix B.  Connection monetary cost . . . . . . . . . . . . . .  18
     B.1.  Conditions  . . . . . . . . . . . . . . . . . . . . . . .  18
     B.2.  Price . . . . . . . . . . . . . . . . . . . . . . . . . .  19
     B.3.  Examples  . . . . . . . . . . . . . . . . . . . . . . . .  20
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  21

1.  Introduction

   It has become very common in modern networks for hosts to access the
   network through different network interfaces, tunnels, or next-hop
   routers.  To describe the set of network configurations associated
   with %% each access method, the concept of Provisioning Domain (PvD)
   was defined in [RFC7556].

   This specification provides a way to identify explicit PvDs with
   Fully Qualified Domain Names (FQDN).  The FQDN is thus called PvD ID
   in this document.  The PvD IDs is included in a Router Advertisement
   [RFC4861] option.  This new option, when present, associates the set
   of configurations with the PvD ID in the same RA message.  It is
   worth noting that multiple PvDs (with different PvD IDs) could be
   provisioned on any host interface, as well as noting that the same
   PvD ID could be used on different interfaces in order to inform the
   host that all PvDs with the same PvD ID, on different interfaces,
   ultimately provide identical services.

   This document also introduces a way for hosts to retrieve additional
   information related to a specific PvD by the mean of an HTTP-over-TLS
   query using an URI derived from the PvD ID.  The retrieved JSON
   object contains additional network information that would typically
   be considered unfit, or too large, to be directly included in the
   Router Advertisements.  This information can be used by the
   networking stack, the applications, or even be partially displayed to
   the users (e.g., by displaying a localized network service name).

2.  Terminology

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in
   [RFC2119].

   In addition, this document uses the following terminology:

   PvD:   A Provisioning Domain, a set of network configuration
      information; for more information, see [RFC7556].

   PvD ID:   A Fully Qualified Domain Name (FQDN) used to identify a
      PvD.



Pfister, et al.            Expires May 3, 2018                  [Page 3]

Internet-Draft            Provisioning Domains              October 2017


   Explicit PvD:   A PvD uniquely identified with a PvD ID. for more
      information, see [RFC7556].

   Implicit PvD:   A PvD associated with a set of configuration
      information that, in the absence of a PvD ID, is associated with
      the advertising router.

3.  Provisioning Domain Identification using Router Advertisements

   Each provisioning domain is identified by a PvD ID.  The PvD ID is a
   Fully Qualified Domain Name (FQDN) which MUST belong to the network
   operator in order to avoid ambiguity.  The same PvD ID MAY be used in
   several access networks when the set of configuration information is
   identical (e.g. in all home networks subscribed to the same service).

3.1.  PvD ID Option for Router Advertisements

   This document introduces a Router Advertisement (RA) option called
   the PvD ID Router Advertisement Option, used to convey the FQDN
   identifying a given PvD.

    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |     Type      |    Length     |H|L|         Reserved          |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |           Sequence            |                             ...
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                             ...
   ...                         PvD ID FQDN                       ...
   ...             +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   ...             |                  Padding                      |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

                PvD ID Router Advertisements Option format

   Type        :   (8 bits) To be defined by IANA.  Current
      experimentation uses the value of 253.

   Length      :   (8 bits) The length of the option (including the Type
      and Length fields) in units of 8 octets.

   H-flag      :   (1 bit) Whether some PvD Additional Information is
      made available through HTTP over TLS, as described in Section 4.

   L-flag      :   (1 bit) Whether the router is also providing IPv4
      information using DHCPv4 (see Section 3.3.2).





Pfister, et al.            Expires May 3, 2018                  [Page 4]

Internet-Draft            Provisioning Domains              October 2017


   Reserved    :   (14 bits) Reserved for later use.  It MUST be set to
      zero by the sender and ignored by the receiver.

   Sequence    :   (16 bits) Sequence number for the PvD Additional
      Information, as described in Section 4.

   PvD ID FQDN :   The FQDN used as PvD ID encoded as described in
      Section 3.1 of RFC1035 [RFC1035].  Note that for simple decoding,
      the domain names MUST NOT be encoded in the compressed form
      described in Section 4.1.4 of RFC1035 [RFC1035].  This encoding is
      the same as the one used in RFC8106 [RFC8106].  The encoding MUST
      end with a null (zero-length) label.

   Padding     :   Zero or more padding octets such as to set the option
      length (Type and Length fields included) to eight times the value
      of the Length field.  It MUST be set to zero by the sender and
      ignored by the receiver.

   Routers MUST NOT include more than one PvD ID Router Advertisement
   Option in each RA.  In case multiple PvD ID options are found in a
   given RA, hosts MUST ignore all but the first PvD ID option.

3.2.  Router Behavior

   A router MAY insert only one PvD ID Option in an RA.  The included
   PvD ID is associated with all the other options included in the same
   RA (for example, and not limited to: Prefix Information [RFC4861],
   Recursive DNS Server [RFC8106], Routing Information [RFC4191]
   options).

   In order to provide multiple independent PvDs, a router MUST send
   multiple RAs using different source link-local addresses (LLA) (as
   proposed in [I-D.bowbakova-rtgwg-enterprise-pa-multihoming]), each of
   which MAY include a PvD ID option.  In such cases, routers MAY
   originate the different RAs using the same datalink layer address.

   If the router is actually a VRRP instance [RFC5798], then the
   procedure is identical except that the virtual datalink layer address
   is used as well as the virtual IPv6 LLA.

3.3.  Host Behavior

   RAs provide configuration information for IPv6 hosts.  When a host
   receives an RA message including a PvD ID Option, it MUST associate
   all the configuration objects which are updated by the received RA
   (the same types as in Section 3.3) with the PvD identified by the PvD
   ID Option, even if some objects are already associated with a
   different explicit or implicit PvD.  PvD ID are compared in a case-



Pfister, et al.            Expires May 3, 2018                  [Page 5]

Internet-Draft            Provisioning Domains              October 2017


   insensitive manner (i.e., A=a), assuming ASCII with zero parity.
   Non-alphabetic codes must match exactly (see also Section 3.1 of
   [RFC1035]).

   If the received RA does not include a PvD ID Option, the host MUST
   associate the configuration objects which are updated by the received
   RA with an implicit PvD, even if some objects were already associated
   with a different explicit or implicit PvD.  This implicit PvD MUST be
   identified by the LLA of the router sending the RA and the interface
   on which the RA was received.

   This document does not update the way Router Advertisement options
   are processed.  But in addition to the option processing defined in
   other documents, hosts implementing this specification MUST associate
   each created or updated object (e.g. address, default route, more
   specific route, DNS server list) with the PvD associated with the
   received RA.

   While resolving names, executing the default address selection
   algorithm [RFC6724] or executing the default router selection
   algorithm ([RFC2461], [RFC4191] and [RFC8028]), hosts MAY consider
   only the configuration associated with an arbitrary set of PvDs.

   For example, a host MAY associate a given process with a specific
   PvD, or a specific set of PvDs, while associating another process
   with another PvD.  A PvD-aware application might also be able to
   select, on a per-connection basis, which PvDs should be used for a
   given connection.  In particular, constrained devices such as small
   battery operated devices (e.g.  IoT), or devices with limited CPU or
   memory resources may purposefully use a single PvD while ignoring
   some received RAs containing different PvD IDs.

   The way an application expresses its desire to use a given PvD, or a
   set of PvDs, or the way this selection is enforced, is out of the
   scope of this document.  Useful insights about these considerations
   can be found in [I-D.kline-mif-mpvd-api-reqs].

3.3.1.  DHCPv6 configuration association

   When a host retrieves configuration elements using DHCPv6, they MUST
   be associated with the explicit or implicit PvD of the RA received on
   the same interface, sent from the same LLA, and with the O-flag set
   [RFC4861].  If no such PvD is found, or whenever multiple different
   PvDs are found, the host behavior is unspecified.

   This process requires hosts to keep track of received RAs, associated
   PvD IDs, and routers LLA; it also assumes that the router either acts
   as a DHCPv6 server or relay and uses the same LLA for DHCPv6 and RA



Pfister, et al.            Expires May 3, 2018                  [Page 6]

Internet-Draft            Provisioning Domains              October 2017


   traffic (which may not be the case when the router uses VRRP to send
   its RA).

3.3.2.  DHCPv4 configuration association

   When a host retrieves configuration elements from DHCPv4, they MUST
   be associated with the explicit PvD received on the same interface,
   whose PVD ID Options L-flag is set and, in the case of a non point-
   to-point link, using the same datalink address.  If no such PvD is
   found, or whenever multiple different PvDs are found, the
   configuration elements coming from DHCPv4 MUST be associated with an
   IPv4-only implicit PvD identified by the interface on which the
   DHCPv4 transaction happened.  The case of multiple explicit PvD for
   an IPv4 interface is undefined.

3.3.3.  Interconnection Sharing by the Host

   The situation when a node receives RA on one interface (e.g.
   cellular) and shares this connectivity by also acting as a router by
   transmitting RA on another interface (e.g.  WiFi) is known as
   'tethering'.  It can be done as ND proxy.  The exact behavior is TBD
   but it is expected that the one or several PvD associated to the
   shared interface (e.g. cellular) will also be advertised to the
   clients on the other interface (e.g.  WiFi).

4.  Provisioning Domain Additional Information

   Once a new PvD ID is discovered, it may be used to retrieve
   additional information about the characteristics of the provided
   connectivity.  This set of information is called PvD Additional
   Information, and is encoded as a JSON object [RFC7159].

   The purpose of this additional set of information is to securely
   provide additional information to hosts about the connectivity that
   is provided using a given interface and source address pair.  It
   typically includes data that would be considered too large, or not
   critical enough, to be provided within an RA option.  The information
   contained in this object MAY be used by the operating system, network
   libraries, applications, or users, in order to decide which set of
   PvDs should be used for which connection, as described in
   Section 3.3.

4.1.  Retrieving the PvD Additional Information

   When the H-flag of the PvD ID Option is set, hosts MAY attempt to
   retrieve the PvD Additional Information associated with a given PvD
   by performing an HTTP over TLS [RFC2818] GET query to https://<PvD-




Pfister, et al.            Expires May 3, 2018                  [Page 7]

Internet-Draft            Provisioning Domains              October 2017


   ID>/.well-known/pvd [RFC5785].  Inversely, hosts MUST NOT do so
   whenever the H-flag is not set.

   Note that the DNS name resolution of <PvD-ID> as well as the actual
   query MUST be performed using the PvD associated with the PvD ID.  In
   other words, the name resolution, source address selection, as well
   as the next-hop router selection MUST be performed while using
   exclusively the set of configuration information attached with the
   PvD, as defined in Section 3.3.  In some cases, it may therefore be
   necessary to wait for an address to be available for use (e.g., once
   the Duplicate Address Detection or DHCPv6 processes are complete)
   before initiating the HTTP over TLS query.  If the PvD allows for
   temporary address per [RFC4941], then host SHOULD use a temporary
   address to fetch the PvD Additional Information and SHOULD deprecate
   the used temporary address and generate a new temporary address.

   If the HTTP status of the answer is greater than or equal to 400 the
   host MUST abandon and consider that there is no additional PvD
   information.  If the HTTP status of the answer is between 300 and
   399, inclusive, it MUST follow the redirection(s).  If the HTTP
   status of the answer is between 200 and 299, inclusive, the host MAY
   get a file containing a single JSON object.  When a JSON object could
   not be retrieved, an error message SHOULD be logged and/or displayed
   in a rate-limited fashion.

   After retrieval of the PvD Additional Information, hosts MUST watch
   the PvD ID Sequence field for change.  In case a different value than
   the one in the RA Sequence field is observed, or whenever the
   validity time included in the PVD Additional Information JSON object
   is expired, hosts MUST either perform a new query and retrieve a new
   version of the object, or, failing that, deprecate the object and
   stop using it.

   Hosts retrieving a new PvD Additional Information object MUST check
   for the presence and validity of the mandatory fields Section 4.3.  A
   retrieved object including an outdated expiration time or missing a
   mandatory element MUST be ignored.  In order to avoid traffic spikes
   toward the server hosting the PvD Additional Information when an
   object expires, a host which last retrieved an object at a time A,
   including a validity time B, SHOULD renew the object at a uniformly
   random time in the interval [(B-A)/2,A].

   The PvD Additional Information object includes a set of IPv6 prefixes
   (under the key "prefixes") which MUST be checked against all the
   Prefix Information Options advertised in the RA.  If any of the
   prefixes included in the PIO is not covered by at least one of the
   listed prefixes, the PvD associated with the tested prefix MUST be
   considered unsafe and MUST NOT be used.  While this does not prevent



Pfister, et al.            Expires May 3, 2018                  [Page 8]

Internet-Draft            Provisioning Domains              October 2017


   a malicious network provider, it does complicate some attack
   scenarios, and may help detecting misconfiguration.

   The server providing the JSON files SHOULD also check whether the
   client address is part of the prefixes listed into the additional
   information and SHOULD return a 403 response code if there is no
   match.  The server MAY also use the client address to select the
   right JSON object to be returned.

4.2.  Providing the PvD Additional Information

   Whenever the H-flag is set in the PvD RA Option, a valid PvD
   Additional Information object MUST be made available to all hosts
   receiving the RA by the network operator.  In particular, when a
   captive portal is present, hosts MUST still be allowed to access the
   object, even before logging into the captive portal.

   Routers MAY increment the PVD ID Sequence number in order to inform
   host that a new PvD Additional Information object is available and
   should be retrieved.

4.3.  PvD Additional Information Format

   The PvD Additional Information is a JSON object.

   The following array presents the mandatory keys which MUST be
   included in the object:

   +----------+-----------------+-------------+------------------------+
   | JSON key | Description     | Type        | Example                |
   +----------+-----------------+-------------+------------------------+
   | name     | Human-readable  | UTF-8       | "Awesome Wifi"         |
   |          | service name    | string      |                        |
   |          |                 | [RFC3629]   |                        |
   | expires  | Date after      | [RFC3339]   | "2017-07-23T06:00:00Z" |
   |          | which this      |             |                        |
   |          | object is not   |             |                        |
   |          | valid           |             |                        |
   | prefixes | Array of IPv6   | Array of    | ["2001:db8:1::/48",    |
   |          | prefixes valid  | strings     | "2001:db8:4::/48"]     |
   |          | for this PVD    |             |                        |
   +----------+-----------------+-------------+------------------------+

   A retrieved object which does not include a valid string associated
   with the "name" key at the root of the object, or a valid date
   associated with the "expires" key, also at the root of the object,
   MUST be ignored.  In such cases, an error message SHOULD be logged
   and/or displayed in a rate-limited fashion.  If the PIO of the



Pfister, et al.            Expires May 3, 2018                  [Page 9]

Internet-Draft            Provisioning Domains              October 2017


   received RA is not included in the "prefixes" key, the retrieved
   object SHOULD be ignored.

   The following table presents some optional keys which MAY be included
   in the object.

   +-----------------+-----------------+---------+---------------------+
   | JSON key        | Description     | Type    | Example             |
   +-----------------+-----------------+---------+---------------------+
   | localizedName   | Localized user- | UTF-8   | "Wifi Genial"       |
   |                 | visible service | string  |                     |
   |                 | name, language  |         |                     |
   |                 | can be selected |         |                     |
   |                 | based on the    |         |                     |
   |                 | HTTP Accept-    |         |                     |
   |                 | Language header |         |                     |
   |                 | in the request. |         |                     |
   | dnsZones        | DNS zones       | array   | ["example.com","sub |
   |                 | searchable and  | of DNS  | .example.org"]      |
   |                 | accessible      | zones   |                     |
   | noInternet      | No Internet,    | boolean | true                |
   |                 | set when the    |         |                     |
   |                 | PvD only        |         |                     |
   |                 | provides        |         |                     |
   |                 | restricted      |         |                     |
   |                 | access to a set |         |                     |
   |                 | of services     |         |                     |
   | characteristics | Connectivity    | JSON    | See Section 4.3.1   |
   |                 | characteristics | object  |                     |
   | metered         | metered, when   | boolean | false               |
   |                 | the access      |         |                     |
   |                 | volume is       |         |                     |
   |                 | limited         |         |                     |
   +-----------------+-----------------+---------+---------------------+

   It is worth noting that the JSON format allows for extensions.
   Whenever an unknown key is encountered, it MUST be ignored along with
   its associated elements.

4.3.1.  Connectivity Characteristics Information

   The following set of keys can be used to signal certain
   characteristics of the connection towards the PvD.

   They should reflect characteristics of the overall access technology
   which is not limited to the link the host is connected to, but rather
   a combination of the link technology, CPE upstream connectivity, and
   further quality of service considerations.



Pfister, et al.            Expires May 3, 2018                 [Page 10]

Internet-Draft            Provisioning Domains              October 2017


   +---------------+--------------+---------------------+--------------+
   | JSON key      | Description  | Type                | Example      |
   +---------------+--------------+---------------------+--------------+
   | maxThroughput | Maximum      | object({down(int),  | {"down":     |
   |               | achievable   | up(int)}) in kbit/s | 10000, "up": |
   |               | throughput   |                     | 5000}        |
   | minLatency    | Minimum      | object({down(int),  | {"down": 10, |
   |               | achievable   | up(int)}) in msec   | "up": 20}    |
   |               | latency      |                     |              |
   | rl            | Maximum      | object({down(int),  | {"down":     |
   |               | achievable   | up(int)}) in losses | 0.1, "up":   |
   |               | reliability  | every 1000 packets  | 1}           |
   +---------------+--------------+---------------------+--------------+

4.3.2.  Private Extensions

   JSON keys starting with "x-" are reserved for private use and can be
   utilized to provide information that is specific to vendor, user or
   enterprise.  It is RECOMMENDED to use one of the patterns "x-FQDN-
   KEY" or "x-PEN-KEY" where FQDN is a fully qualified domain name or
   PEN is a private enterprise number [PEN] under control of the author
   of the extension to avoid collisions.

4.3.3.  Example

   Here are two examples based on the keys defined in this section.

   {
     "name": "Foo Wireless",
     "localizedName": "Foo-France Wifi",
     "expires": "2017-07-23T06:00:00Z",
     "prefixes" : ["2001:db8:1::/48", "2001:db8:4::/48"],
     "characteristics": {
      "maxThroughput": { "down":200000, "up": 50000 },
      "minLatency": { "down": 0.1, "up": 1 }
     }
   }

   {
     "name": "Bar 4G",
     "localizedName": "Bar US 4G",
     "expires": "2017-07-23T06:00:00Z",
     "prefixes": ["2001:db8:1::/48", "2001:db8:4::/48"],
     "metered": true,
     "characteristics": {
       "maxThroughput": { "down":80000, "up": 20000 }
     }
   }



Pfister, et al.            Expires May 3, 2018                 [Page 11]

Internet-Draft            Provisioning Domains              October 2017


4.4.  Detecting misconfiguration and misuse

   Although some solutions such as IPsec or SEND [RFC3971] can be used
   in order to secure the IPv6 Neighbor Discovery Protocol, actual
   deployments largely rely on link layer or physical layer security
   mechanisms (e.g. 802.1x [IEEE8021X]) in conjunction with RA Guard
   [RFC6105].

   This specification does not improve the Neighbor Discovery Protocol
   security model, but extends the purely link-local configuration
   retrieval mechanisms with HTTP-over-TLS communications and some
   checks to detect misconfiguration and some misuses.

   When a host retrieves the PvD Additional Information, it MUST verify
   that the HTTPS server certificate is valid and that the Subject Name
   is equal to the PvD ID expressed as an FQDN.  This authentication
   creates a secure binding between the information provided by the
   trusted Router Advertisement, and the HTTPS server.  But this does
   not mean the Advertising Router and the PvD server belong to the same
   entity.

   When the "prefixes" key is included in the PvD Additional
   Information, then host MUST verify that all prefixes in the RA PIO
   are covered by a prefixes from the PvD Additional Informaion.  An
   adversarial router willing to fake the use of a given explicit PvD,
   without any access to the actual PvD Additional Information, would
   need to perform NAT66 in order to circumvent this check.

   It is also RECOMMENDED that the HTTPS server checks the source
   addresses of incoming connections (see Section 4.1).  This checks
   give reasonable assurance that NAT66 was not used and also restrict
   the information to the valid network users.

5.  Security Considerations

   It must be noted that the Section 4.4 of this document only provides
   reasonable assurance against misconfiguration but does not prevent an
   hostile network access provider to wrong information that could lead
   applications or hosts to select an hostile PvD.  Users should always
   apply caution when connecting to an unknown network.

6.  Privacy Considerations

   When a host retrieves via HTTPS the additional information, all nodes
   on the path (including the HTTPS server) can detect that the node is
   active.





Pfister, et al.            Expires May 3, 2018                 [Page 12]

Internet-Draft            Provisioning Domains              October 2017


   As it can be expected that the HTTPS server is located in the same
   management domain as the client (usually, it will be within an
   enterprise network, WiFi hotspot, or Service Provider network), the
   network operator as usually other means to also detect the new active
   node (DHCP, Neighbor Discovery Protocol cache inspection or DNS
   request logging).  In this case, privacy is not worsened by using
   PvD.

   It must also be noted that most operating systems implement a system
   to detect the presence of a captive portal and also connect to a
   well-known web site over the Internet, for example to
   http://captive.example.com/hotspot-detect.html.  This detection
   mechanism is exposing the activity of the detecting node not only
   within the management domain but also to all nodes outside this
   domain on the path to the captive.example.com server.  As PvD can
   also be used to detect captive portal, then the PvD actually
   preserves privacy.

   Finally, the fetching of additional information is an option and
   could be disabled by the host.

7.  IANA Considerations

   IANA is asked to assign the value TBD from the IPv6 Neighbor
   Discovery Option Formats registry for the PvD ID Router Advertisement
   option.

   IANA is asked to assign the value "pvd" from the Well-Known URIs
   registry.

   IANA is asked to create and maintain a new registry entitled
   "Additional Information PvD Keys" containing ASCII strings.  The
   initial content of this registry are given below; future assignements
   are to be made through Expert Review [BCP36].

8.  Acknowledgements

   Many thanks to M.  Stenberg and S.  Barth for their earlier work:
   [I-D.stenberg-mif-mpvd-dns].

   Thanks also to Mikael Abrahamson, Ray Bellis, Lorenzo Colitti,
   Thierry Danis, Bob Hinden, Tatuya Jinmei, Erik Kline, Ted Lemon, Jen
   Lenkova, Mark Townsley, James Woodyatt for useful and interesting
   discussions.

   Finally, many thanks to Thierry Danis for his implementation work
   ([github]), Tom Jones for his integration effort into the Neat
   project and Rigil Salim for his implementation work.



Pfister, et al.            Expires May 3, 2018                 [Page 13]

Internet-Draft            Provisioning Domains              October 2017


9.  Contributor

   Basile Bruneau was a co-author of this document while he was studying
   at the Polytechnique Paris.

10.  References

10.1.  Normative references

   [I-D.bowbakova-rtgwg-enterprise-pa-multihoming]
              Baker, F., Bowers, C., and J. Linkova, "Enterprise
              Multihoming using Provider-Assigned Addresses without
              Network Prefix Translation: Requirements and Solution",
              draft-bowbakova-rtgwg-enterprise-pa-multihoming-01 (work
              in progress), October 2016.

   [RFC1035]  Mockapetris, P., "Domain names - implementation and
              specification", STD 13, RFC 1035, DOI 10.17487/RFC1035,
              November 1987, <https://www.rfc-editor.org/info/rfc1035>.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/info/rfc2119>.

   [RFC2461]  Narten, T., Nordmark, E., and W. Simpson, "Neighbor
              Discovery for IP Version 6 (IPv6)", RFC 2461,
              DOI 10.17487/RFC2461, December 1998,
              <https://www.rfc-editor.org/info/rfc2461>.

   [RFC2818]  Rescorla, E., "HTTP Over TLS", RFC 2818,
              DOI 10.17487/RFC2818, May 2000,
              <https://www.rfc-editor.org/info/rfc2818>.

   [RFC3629]  Yergeau, F., "UTF-8, a transformation format of ISO
              10646", STD 63, RFC 3629, DOI 10.17487/RFC3629, November
              2003, <https://www.rfc-editor.org/info/rfc3629>.

   [RFC4861]  Narten, T., Nordmark, E., Simpson, W., and H. Soliman,
              "Neighbor Discovery for IP version 6 (IPv6)", RFC 4861,
              DOI 10.17487/RFC4861, September 2007,
              <https://www.rfc-editor.org/info/rfc4861>.

   [RFC7159]  Bray, T., Ed., "The JavaScript Object Notation (JSON) Data
              Interchange Format", RFC 7159, DOI 10.17487/RFC7159, March
              2014, <https://www.rfc-editor.org/info/rfc7159>.





Pfister, et al.            Expires May 3, 2018                 [Page 14]

Internet-Draft            Provisioning Domains              October 2017


   [RFC8126]  Cotton, M., Leiba, B., and T. Narten, "Guidelines for
              Writing an IANA Considerations Section in RFCs", BCP 26,
              RFC 8126, DOI 10.17487/RFC8126, June 2017,
              <https://www.rfc-editor.org/info/rfc8126>.

10.2.  Informative references

   [github]   Cisco, "IPv6-mPvD github repository",
              <https://github.com/IPv6-mPvD>.

   [I-D.kline-mif-mpvd-api-reqs]
              Kline, E., "Multiple Provisioning Domains API
              Requirements", draft-kline-mif-mpvd-api-reqs-00 (work in
              progress), November 2015.

   [I-D.stenberg-mif-mpvd-dns]
              Stenberg, M. and S. Barth, "Multiple Provisioning Domains
              using Domain Name System", draft-stenberg-mif-mpvd-dns-00
              (work in progress), October 2015.

   [IEEE8021X]
              IEEE, "IEEE Standards for Local and Metropolitan Area
              Networks: Port based Network Access Control, IEEE Std".

   [PEN]      IANA, "Private Enterprise Numbers",
              <https://www.iana.org/assignments/enterprise-numbers>.

   [RFC3339]  Klyne, G. and C. Newman, "Date and Time on the Internet:
              Timestamps", RFC 3339, DOI 10.17487/RFC3339, July 2002,
              <https://www.rfc-editor.org/info/rfc3339>.

   [RFC3971]  Arkko, J., Ed., Kempf, J., Zill, B., and P. Nikander,
              "SEcure Neighbor Discovery (SEND)", RFC 3971,
              DOI 10.17487/RFC3971, March 2005,
              <https://www.rfc-editor.org/info/rfc3971>.

   [RFC4191]  Draves, R. and D. Thaler, "Default Router Preferences and
              More-Specific Routes", RFC 4191, DOI 10.17487/RFC4191,
              November 2005, <https://www.rfc-editor.org/info/rfc4191>.

   [RFC4941]  Narten, T., Draves, R., and S. Krishnan, "Privacy
              Extensions for Stateless Address Autoconfiguration in
              IPv6", RFC 4941, DOI 10.17487/RFC4941, September 2007,
              <https://www.rfc-editor.org/info/rfc4941>.







Pfister, et al.            Expires May 3, 2018                 [Page 15]

Internet-Draft            Provisioning Domains              October 2017


   [RFC5785]  Nottingham, M. and E. Hammer-Lahav, "Defining Well-Known
              Uniform Resource Identifiers (URIs)", RFC 5785,
              DOI 10.17487/RFC5785, April 2010,
              <https://www.rfc-editor.org/info/rfc5785>.

   [RFC5798]  Nadas, S., Ed., "Virtual Router Redundancy Protocol (VRRP)
              Version 3 for IPv4 and IPv6", RFC 5798,
              DOI 10.17487/RFC5798, March 2010,
              <https://www.rfc-editor.org/info/rfc5798>.

   [RFC6105]  Levy-Abegnoli, E., Van de Velde, G., Popoviciu, C., and J.
              Mohacsi, "IPv6 Router Advertisement Guard", RFC 6105,
              DOI 10.17487/RFC6105, February 2011,
              <https://www.rfc-editor.org/info/rfc6105>.

   [RFC6724]  Thaler, D., Ed., Draves, R., Matsumoto, A., and T. Chown,
              "Default Address Selection for Internet Protocol Version 6
              (IPv6)", RFC 6724, DOI 10.17487/RFC6724, September 2012,
              <https://www.rfc-editor.org/info/rfc6724>.

   [RFC7556]  Anipko, D., Ed., "Multiple Provisioning Domain
              Architecture", RFC 7556, DOI 10.17487/RFC7556, June 2015,
              <https://www.rfc-editor.org/info/rfc7556>.

   [RFC8028]  Baker, F. and B. Carpenter, "First-Hop Router Selection by
              Hosts in a Multi-Prefix Network", RFC 8028,
              DOI 10.17487/RFC8028, November 2016,
              <https://www.rfc-editor.org/info/rfc8028>.

   [RFC8106]  Jeong, J., Park, S., Beloeil, L., and S. Madanapalli,
              "IPv6 Router Advertisement Options for DNS Configuration",
              RFC 8106, DOI 10.17487/RFC8106, March 2017,
              <https://www.rfc-editor.org/info/rfc8106>.

Appendix A.  Changelog

   Note to RFC Editors: Remove this section before publication.

A.1.  Version 00

   Initial version of the draft.  Edited by Basile Bruneau + Eric Vyncke
   and based on Basile's work.

A.2.  Version 01

   Major rewrite intended to focus on the the retained solution based on
   corridors, online, and WG discussions.  Edited by Pierre Pfister.
   The following list only includes major changes.



Pfister, et al.            Expires May 3, 2018                 [Page 16]

Internet-Draft            Provisioning Domains              October 2017


      PvD ID is an FQDN retrieved using a single RA option.  This option
      contains a sequence number for push-based updates, a new H-flag,
      and a L-flag in order to link the PvD with the IPv4 DHCP server.

      A lifetime is included in the PvD ID option.

      Detailed Hosts and Routers specifications.

      Additional Information is retrieved using HTTP-over-TLS when the
      PvD ID Option H-flag is set.  Retrieving the object is optional.

      The PvD Additional Information object includes a validity date.

      DNS-based approach is removed as well as the DNS-based encoding of
      the PvD Additional Information.

      Major cut in the list of proposed JSON keys.  This document may be
      extended later if need be.

      Monetary discussion is moved to the appendix.

      Clarification about the 'prefixes' contained in the additional
      information.

      Clarification about the processing of DHCPv6.

A.3.  Version 02

      The FQDN is now encoded with ASCII format (instead of DNS binary)
      in the RA option.

      The PvD ID option lifetime is removed from the object.

      Use well known URI "https://<PvD-ID>/.well-known/pvd"

      Reference RFC3339 for JSON timestamp format.

      The PvD ID Sequence field has been extended to 16 bits.

      Modified host behavior for DHCPv4 and DHCPv6.

      Removed IKEv2 section.

      Removed mention of RFC7710 Captive Portal option.  A new I.D.
      will be proposed to address the captive portal use case.






Pfister, et al.            Expires May 3, 2018                 [Page 17]

Internet-Draft            Provisioning Domains              October 2017


A.4.  WG Document version 00

      Document has been accepted as INTAREA working group document

      IANA considerations follow RFC8126 [RFC8126]

      PvD ID FQDN is encoded as per RFC 1035 [RFC1035]

      PvD ID FQDN is prepended by a one-byte length field

      Marcus Keane added as co-author

      dnsZones key is added back

      draft of a privacy consideration section and added that a
      temporary address should be used to retrieve the PvD additional
      information

      per Bob Hinden's request: the document is now aiming at standard
      track and security considerations have been moved to the main
      section

Appendix B.  Connection monetary cost

   NOTE: This section is included as a request for comment on the
   potential use and syntax.

   The billing of a connection can be done in a lot of different ways.
   The user can have a global traffic threshold per month, after which
   his throughput is limited, or after which he/she pays each megabyte.
   He/she can also have an unlimited access to some websites, or an
   unlimited access during the weekends.

   An option is to split the bill in elementary billings, which have
   conditions (a start date, an end date, a destination IP address...).
   The global billing is an ordered list of elementary billings.  To
   know the cost of a transmission, the host goes through the list, and
   the first elementary billing whose the conditions are fulfilled gives
   the cost.  If no elementary billing conditions match the request, the
   host MUST make no assumption about the cost.

B.1.  Conditions

   Here are the potential conditions for an elementary billing.  All
   conditions MUST be fulfill.






Pfister, et al.            Expires May 3, 2018                 [Page 18]

Internet-Draft            Provisioning Domains              October 2017


   +-----------+-------------+---------------+-------------------------+
   | Key       | Description | Type          | JSON Example            |
   +-----------+-------------+---------------+-------------------------+
   | beginDate | Date before | ISO 8601      | "1977-04-22T06:00:00Z"  |
   |           | which the   |               |                         |
   |           | billing is  |               |                         |
   |           | not valid   |               |                         |
   | endDate   | Date after  | ISO 8601      | "1977-04-22T06:00:00Z"  |
   |           | which the   |               |                         |
   |           | billing is  |               |                         |
   |           | not valid   |               |                         |
   | domains   | FQDNs whose | array(string) | ["deezer.com","spotify. |
   |           | the billing |               | com"]                   |
   |           | is limited  |               |                         |
   | prefixes4 | IPv4        | array(string) | ["78.40.123.182/32","78 |
   |           | prefixes    |               | .40.123.183/32"]        |
   |           | whose the   |               |                         |
   |           | billing is  |               |                         |
   |           | limited     |               |                         |
   | prefixes6 | IPv6        | array(string) | ["2a00:1450:4007:80e::2 |
   |           | prefixes    |               | 00e/64"]                |
   |           | whose the   |               |                         |
   |           | billing is  |               |                         |
   |           | limited     |               |                         |
   +-----------+-------------+---------------+-------------------------+

B.2.  Price

   Here are the different possibilities for the cost of an elementary
   billing.  A missing key means "all/unlimited/unrestricted".  If the
   elementary billing selected has a trafficRemaining of 0 kb, then it
   means that the user has no access to the network.  Actually, if the
   last elementary billing has a trafficRemaining parameter, it means
   that when the user will reach the threshold, he/she will not have
   access to the network anymore.
















Pfister, et al.            Expires May 3, 2018                 [Page 19]

Internet-Draft            Provisioning Domains              October 2017


   +------------------+------------------+--------------+--------------+
   | Key              | Description      | Type         | JSON Example |
   +------------------+------------------+--------------+--------------+
   | pricePerGb       | The price per    | float        | 2            |
   |                  | Gigabit          | (currency    |              |
   |                  |                  | per Gb)      |              |
   | currency         | The currency     | ISO 4217     | "EUR"        |
   |                  | used             |              |              |
   | throughputMax    | The maximum      | float (kb/s) | 100000       |
   |                  | achievable       |              |              |
   |                  | throughput       |              |              |
   | trafficRemaining | The traffic      | float (kB)   | 12000000     |
   |                  | remaining        |              |              |
   +------------------+------------------+--------------+--------------+

B.3.  Examples

   Example for a user with 20 GB per month for 40 EUR, then reach a
   threshold, and with unlimited data during weekends and to
   example.com:

   [
     {
       "domains": ["example.com"]
     },
     {
       "prefixes4": ["78.40.123.182/32","78.40.123.183/32"]
     },
     {
       "beginDate": "2016-07-16T00:00:00Z",
       "endDate": "2016-07-17T23:59:59Z",
     },
     {
       "beginDate": "2016-06-20T00:00:00Z",
       "endDate": "2016-07-19T23:59:59Z",
       "trafficRemaining": 12000000
     },
     {
       "throughputMax": 100000
     }
   ]

   If the host tries to download data from example.com, the conditions
   of the first elementary billing are fulfilled, so the host takes this
   elementary billing, finds no cost indication in it and so deduces
   that it is totally free.  If the host tries to exchange data with
   foobar.com and the date is 2016-07-14T19:00:00Z, the conditions of
   the first, second and third elementary billing are not fulfilled.



Pfister, et al.            Expires May 3, 2018                 [Page 20]

Internet-Draft            Provisioning Domains              October 2017


   But the conditions of the fourth are.  So the host takes this
   elementary billing and sees that there is a threshold, 12 GB are
   remaining.

   Another example for a user abroad, who has 3 GB per year abroad, and
   then pay each MB:

   [
     {
       "beginDate": "2016-02-10T00:00:00Z",
       "endDate": "2017-02-09T23:59:59Z",
       "trafficRemaining": 3000000
     },
     {
       "pricePerGb": 30,
       "currency": "EUR"
     }
   ]

Authors' Addresses

   Pierre Pfister
   Cisco
   11 Rue Camille Desmoulins
   Issy-les-Moulineaux  92130
   France

   Email: ppfister@cisco.com


   Eric Vyncke (editor)
   Cisco
   De Kleetlaan, 6
   Diegem  1831
   Belgium

   Email: evyncke@cisco.com


   Tommy Pauly
   Apple

   Email: tpauly@apple.com








Pfister, et al.            Expires May 3, 2018                 [Page 21]

Internet-Draft            Provisioning Domains              October 2017


   David Schinazi
   Apple

   Email: dschinazi@apple.com


   Marcus Keane
   Microsoft
   Sandyford Industrial Estate
   Dublin 18
   Ireland

   Email: Marcus.Keane@microsoft.com






































Pfister, et al.            Expires May 3, 2018                 [Page 22]
